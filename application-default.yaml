nufirst:
  tenantName: "devops"
  environmentProfile: "devops"
  environmentRole: "master"
  defaultLocale: "it"
  defaultTimeZone: "Europe/Rome"
  defaultCurrency: "EUR"
  fineDeviceLog: false
  fixedPassword: "false;password"
  region: "Lombardia"
  encryptDatabase: false
  systemPassword: "TnVGaXJzdEAyMDIzJA=="
  forceUpdate: false
  frontendAppRoot: ""

cachename:
  translations: "localizationCache"
  authorizations: "authorizationCache"
  system: "systemCache"
  instance: "instanceCache"
  placeholderMenu: "phMenuCache"
  fseUnauthorize: "fseUnauthorize"

server:
  forward-headers-strategy: "framework"
  max-http-request-header-size: 20000
  ssl:
    enabled: false
  servlet:
    encoding:
      enabled: true
      charset: "UTF-8"
      force: true
  tomcat:
    threads:
      max: 10000
    basedir: "/opt/nufirst-backend/log"
    accesslog:
      directory: "tomcat"
      suffix: ".log"
      buffered: true
      enabled: true
      file-date-format: ".yyyy-MM-dd"
      pattern: "%t %a \"%r\" %s (%D ms)"
      prefix: "access_log"
      rotate: true
      rename-on-rotate: true
      request-attributes-enabled: true
  error:
    whitelabel:
      enabled: false


spring:
  devtools:
    add-properties: false
    restart:
      enabled: false

  main:
    allow-bean-definition-overriding: true

  servlet:
    multipart:
      max-file-size: "40MB"
      max-request-size: "50MB"
  
  datasource:
    username: "{cipher}6688ff2ad04d8e1e63119d79708fb9dd6905d381536b26e3e47b4ac9d2894673"
    password: "{cipher}0526a03f9c2620cbf04a2e03c6c4ed9ff330db9be7703bc34f48e46141bc9dac"
    driver-class-name: ""
    testWhileIdle: true
    validationQuery: "SELECT 1"
    hikari:
      connection-timeout: 20000
      minimum-idle: 1
      maximum-pool-size: 200
      idle-timeout: 10000
      max-lifetime: 1000

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: "none"
      naming:
        physical-strategy: "org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl"
      jdbc:
        time-zone: UTC
    properties:
      hibernate.format_sql: true
      hibernate.dialect: "org.hibernate.dialect.MySQLDialect"
      hibernate.jdbc.batch_size: 20
      hibernate.jdbc.time_zone: UTC
      org.hibernate.envers.store_data_at_delete: true
      #org.hibernate.envers.do_not_audit_optimistic_locking_field: false
      temp.use_jdbc_metadata_defaults: false

  data:
    jpa:
      repositories:
        bootstrap-mode: "deferred"
    redis:
      host: "redis"
      port: 6379
      database: 0
      password: ""
      lettuce:
        shutdown-timeout: "200ms"
        pool:
          max-active: 8
          max-idle: 10
          min-idle: 5
          max-wait: 1ms
      repositories:
        enabled: false    

  cache:
    type: "redis"
    redis:
      cache-null-values: false
      use-key-prefix: true
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: "https://identity.devdc.nufirst.cloud/auth/realms/developers/protocol/openid-connect/certs"
      client:
        provider:
          nufirst:
            issuer-uri: "https://identity.devdc.nufirst.cloud/auth/realms/developers"
            authorization-uri: "https://identity.devdc.nufirst.cloud/auth/realms/developers/protocol/openid-connect/auth"
            token-uri: "https://identity.devdc.nufirst.cloud/auth/realms/developers/protocol/openid-connect/token"
            token-introspection-uri: "https://identity.devdc.nufirst.cloud/auth/realms/developers/protocol/openid-connect/token/introspect"
            user-info-uri: "https://identity.devdc.nufirst.cloud/auth/realms/developers/protocol/openid-connect/userinfo"
            user-name-attribute: sub
            jwk-set-uri: "https://identity.devdc.nufirst.cloud/auth/realms/developers/protocol/openid-connect/certs"
        registration:
          nufirst:
            scope: "nufirst.api"
            authorization-grant-type: "client_credentials"
            provider: "nufirst"
  
  quartz:
    job-store-type: "jdbc"
    jdbc:
      initialize-schema: "never"
    properties:
      org:
        quartz:
          jobStore:
            driverDelegateClass: "org.quartz.impl.jdbcjobstore.StdJDBCDelegate"
            useProperties: true
            misfireThreshold: 60000
            tablePrefix: "QUARTZ_"
          scheduler:
            instanceId: "AUTO"
            idleWaitTime: 5000
          threadPool:
            threadCount: 5
          plugin:
            shutdownHook:
              class: "org.quartz.plugins.management.ShutdownHookPlugin"
              cleanShutdown: true
  
  rabbitmq:
    host: "rabbitmq"
    virtual-host: "nufirst"
    username: "{cipher}62a2109a97d93e079948301d808e123e252bc8d32e2619f48d38b26a35ed2f46"
    password: "{cipher}62a2109a97d93e079948301d808e123e252bc8d32e2619f48d38b26a35ed2f46"
    listener:
      simple:
        default-requeue-rejected: false

  cloud:
    stream:
      rabbit:
        default:
          autoBindDlq: true
    openfeign:
      compression:
        request:
          enabled: false
        response:
          enabled: false
      hystrix:
        enabled: false
      circuitbreaker:
        enabled: true
        alphanumeric-ids:
          enabled: true
      client:
        config:
          default:
            connectTimeout: 10000
            readTimeout: 600000
            loggerLevel: BASIC
            errorDecoder: cloud.nufirst.common.clients.FeignErrorDecoder
      oauth2:
        enabled: true
        clientRegistrationId: nufirst
  
  redis:
    host: "redis"
    port: 6379
    database: 0
    password: ""
    lettuce:
      shutdown-timeout: "200ms"
      pool:
        max-active: 8
        max-idle: 10
        min-idle: 5
        max-wait: 1ms
  
  jackson:
    time-zone: "UTC"
    serialization:
      write-dates-as-timestamps: false
      write-dates-with-zone-id: true
      FAIL_ON_EMPTY_BEANS: false
    deserialization:
      adjust-dates-to-context-time-zone: false
      FAIL_ON_UNKNOWN_PROPERTIES: false


eureka:
  client:
    registryFetchIntervalSeconds: 5
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: "http://eureka-server:8761/eureka"
  instance:
    #prefer-ip-address: true
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 30
    health-check-url-path: /actuator/health


ribbon:
  eureka:
    enabled: true
  MaxAutoRetries: 2
  MaxAutoRetriesNextServer: 2
  ReadTimeout: 120000
  ConnectTimeout: 999999
  SocketTimeout: 999999


management:
  endpoint:
    info:
      enabled: true
      show-details: always
    health:
      enabled: true
      probes:
        enabled: true
      show-details: always
    metrics:
      enabled: true
    refresh:
      enabled: true
    loggers:
      enabled: true
    startup:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    tags:
      application: ${spring.application.name}

elastic:
  apm:
    enabled: false
    environment: ""
    disable_instrumentations: ""
    disable_bootstrap_checks: true
    server_urls: ""
    server_url: ""
    secret_token: ""
    api_key: ""

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        automaticTransitionFromOpenToHalfOpenEnabled: true
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 10000
        slidingWindowSize: 100
        waitDurationInOpenState: 1s
        slidingWindowType: COUNT_BASED
  timelimiter:
    configs:
      default:
        timeoutDuration: 120s
        cancelRunningFuture: true
  retry:
    configs:
      default:
        maxRetryAttempts: 3
        waitDuration: 100
